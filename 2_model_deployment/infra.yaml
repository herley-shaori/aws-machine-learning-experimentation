AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create a VPC with a public subnet and a security group

Parameters:
  StackName:
    Type: String
    Description: Name of the stack
  VPCCidrBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
  PublicSubnetCidrBlock:
    Type: String
    Default: 10.0.1.0/24
    Description: CIDR block for the public subnet
  Environment:
    Type: String
    Description: Environment tag for resources
  Project:
    Type: String
    Description: Project tag for resources

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-VPC
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidrBlock
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-PublicSubnet
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-InternetGateway
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-RouteTable
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group allowing traffic from VPC and self
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${StackName}-SecurityGroup
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref Project

  SecurityGroupIngressVPC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      CidrIp: !Ref VPCCidrBlock
      Description: Allow all traffic from VPC

  SecurityGroupIngressSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref SecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref SecurityGroup
      Description: Allow all traffic from self

Outputs:
  VPCId:
    Description: ID of the VPC
    Value: !Ref VPC
  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet
  SecurityGroupId:
    Description: ID of the security group
    Value: !Ref SecurityGroup